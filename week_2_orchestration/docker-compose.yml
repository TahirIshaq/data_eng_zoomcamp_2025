services:

  s3:
    image: minio/minio:RELEASE.2024-08-03T04-33-23Z
    command: server --console-address ":9001" /data
    container_name: s3
    env_file:
      - s3.env
    ports:
      - "9001:9001"
      - "9000:9000"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15
    container_name: db
    env_file:
      - db.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      retries: 2
      interval: 5s
      timeout: 5s
  
  postgres:
    image: postgres:15
    env_file:
      - airflow.env
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  scheduler:
    build: .
    command: scheduler
    restart: on-failure
    container_name: scheduler
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - airflow.env
    environment:
      AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./helpers:/opt/airflow/helpers
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  webserver:
    build: .
    entrypoint: bash ./scripts/entrypoint.sh
    restart: on-failure
    container_name: webserver
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - airflow.env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./helpers:/opt/airflow/helpers
    user: "${AIRFLOW_UID:-50000}:0"
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres-db-volume: